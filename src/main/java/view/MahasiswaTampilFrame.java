/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Mahasiswa;

/**
 *
 * @author mirza
 */
public class MahasiswaTampilFrame extends javax.swing.JFrame {

    /**
     * Creates new form MahasiswaTampilFrame
     */
    public MahasiswaTampilFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        etCari = new javax.swing.JTextField();
        bCari = new javax.swing.JButton();
        spMahasiswa = new javax.swing.JScrollPane();
        tbMahasiswa = new javax.swing.JTable();
        bTambah = new javax.swing.JButton();
        bUbah = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bBatal = new javax.swing.JButton();
        bTutup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Mahasiswa");

        jLabel2.setText("Cari Data");

        etCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etCariActionPerformed(evt);
            }
        });

        bCari.setText("Cari");
        bCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariActionPerformed(evt);
            }
        });

        tbMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NPM", "Nama Mahasiswa", "IPK", "Jumlah Matakuliah"
            }
        ));
        spMahasiswa.setViewportView(tbMahasiswa);
        if (tbMahasiswa.getColumnModel().getColumnCount() > 0) {
            tbMahasiswa.getColumnModel().getColumn(0).setMinWidth(75);
            tbMahasiswa.getColumnModel().getColumn(0).setPreferredWidth(75);
            tbMahasiswa.getColumnModel().getColumn(0).setMaxWidth(75);
        }

        bTambah.setText("Tambah");
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });

        bUbah.setText("Ubah");
        bUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUbahActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bBatal.setText("Batal");
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });

        bTutup.setText("Tutup");
        bTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTutupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spMahasiswa, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(etCari)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bCari))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bTutup)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spMahasiswa, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bTambah)
                    .addComponent(bUbah)
                    .addComponent(bHapus)
                    .addComponent(bBatal)
                    .addComponent(bTutup))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void etCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etCariActionPerformed

    private void bCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariActionPerformed
        // TODO add your handling code here:
        
        
        String keywords = etCari.getText();
        Mahasiswa mahasiswa = new Mahasiswa();
        ArrayList<Mahasiswa> listMahasiswa = mahasiswa.search(keywords);
        
        DefaultTableModel model = (DefaultTableModel) tbMahasiswa.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        
        for (int i = 0; i < listMahasiswa.size(); i++) {
            row[0] = listMahasiswa.get(i).getNpm();
            row[1] = listMahasiswa.get(i).getNama();
            row[2] = listMahasiswa.get(i).getIPK();
            row[3] = listMahasiswa.get(i).getJumlahMatakuliah();
            
            model.addRow(row);
        }
    }//GEN-LAST:event_bCariActionPerformed

    private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed
        // TODO add your handling code here:
       MahasiswaInputFrame m = new MahasiswaInputFrame();
       m.setLocationRelativeTo(null);
       m.setVisible(true);
    }//GEN-LAST:event_bTambahActionPerformed

    private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bBatalActionPerformed

    private void bUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUbahActionPerformed
        // TODO add your handling code here:
       TableModel model = tbMahasiswa.getModel();
       int kursor = tbMahasiswa.getSelectedRow();
        
        if(kursor >= 0){//cek user memilih data
       
            String npm = model.getValueAt(kursor,0).toString();
            String nama = model.getValueAt(kursor,1).toString();
            double ipk = Double.parseDouble(model.getValueAt(kursor,2).toString());
            int jumlahMatakuliah = Integer.parseInt(model.getValueAt(kursor,3).toString());
            
            Mahasiswa mahasiswa = new Mahasiswa(npm, nama, ipk, jumlahMatakuliah);
            MahasiswaInputFrame m = new MahasiswaInputFrame(mahasiswa);
            m.setLocationRelativeTo(null);
            m.setVisible(true);
            
        }else{
            JOptionPane.showMessageDialog(null, "Data belum dipilh");
        }
    }//GEN-LAST:event_bUbahActionPerformed

    private void bTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTutupActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_bTutupActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        refresh();
        
    }//GEN-LAST:event_formWindowActivated

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        // TODO add your handling code here:
        
        TableModel model = tbMahasiswa.getModel();
        int kursor = tbMahasiswa.getSelectedRow();
        
        if(kursor >= 0){//cek user memilih data
            
            int pilihan = JOptionPane.showConfirmDialog(null,
                    "Yakin hapus data " + model.getValueAt(kursor, 1) + "?",
                    "Konfirmasi Hapus",
                    JOptionPane.YES_NO_OPTION);
            
            if(pilihan == 0){ // cek pilihan yes no
                String npm = model.getValueAt(kursor,0).toString();
                Mahasiswa mahasiswa = new Mahasiswa();
                mahasiswa.setNpm(npm);
                mahasiswa.delete();
                refresh();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Data belum dipilh");
        }
        
    }//GEN-LAST:event_bHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MahasiswaTampilFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MahasiswaTampilFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MahasiswaTampilFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MahasiswaTampilFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MahasiswaTampilFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bCari;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bTambah;
    private javax.swing.JButton bTutup;
    private javax.swing.JButton bUbah;
    private javax.swing.JTextField etCari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane spMahasiswa;
    private javax.swing.JTable tbMahasiswa;
    // End of variables declaration//GEN-END:variables

    private void refresh() {
        Mahasiswa mahasiswa = new Mahasiswa();
        ArrayList<Mahasiswa> listMahasiswa = mahasiswa.readTable();
        
        DefaultTableModel model = (DefaultTableModel) tbMahasiswa.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        
        for (int i = 0; i < listMahasiswa.size(); i++) {
            row[0] = listMahasiswa.get(i).getNpm();
            row[1] = listMahasiswa.get(i).getNama();
            row[2] = listMahasiswa.get(i).getIPK();
            row[3] = listMahasiswa.get(i).getJumlahMatakuliah();
            
            model.addRow(row);
        }
    }
}
